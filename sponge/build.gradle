/*
 *    This file is part of the Universal Mod Template
 *    licensed under the GNU GPL v3 License.
 *    (some parts of this file are originally from the Distant Horizons mod by James Seibel)
 *
 *    Copyright (C) 2024  Leander Knüttel
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * file changed by: Leander Knüttel
 * date: 02.06.2024
 */

plugins {
    id 'java-library'
    id("org.spongepowered.gradle.plugin") version "2.2.0"
}

sponge {
    apiVersion("8.1.0")
    loader {
        name(PluginLoaders.JAVA_PLAIN)
        version("1.0")
    }
    license("${mod_license}")
    plugin(rootProject.name) {
        displayName("${mod_name}")
        version("${mod_version}")
        entrypoint("${maven_group}.sponge.SpongePlugin")
        description("${mod_description}")
        links {
            homepage("${mod_homepage}")
            source("${mod_source}")
            issues("${mod_issues}")
        }
        contributor("${mod_authors}") {
            description("Lead Developer")
        }
        dependency("spongeapi") {
            loadOrder(PluginDependency.LoadOrder.AFTER)
            optional(false)
        }
    }
}

dependencies {
    //implementation(project(":common"))
}

task deleteResources(type: Delete) {
    delete file("build/resources/main")
}

processResources {
    dependsOn(copyCoreResources)
    dependsOn(copyCommonLoaderResources)
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}
